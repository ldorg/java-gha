name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

env:
  JAVA_VERSION: "17"
  MAVEN_OPTS: -Dmaven.repo.local=.m2/repository

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      checks: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
          cache: maven

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run tests
        run: mvn clean test

      - name: Code Coverage
        run: mvn jacoco:report

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        if: success()
        with:
          file: ./target/site/jacoco/jacoco.xml
          fail_ci_if_error: false

      # ========================================
      # CloudBees Action: Publish Test Results to CloudBees Unify
      # ----------------------------------------
      # Update test-type and results-path to match your test framework and output location
      #
      # Docs: https://github.com/cloudbees-io-gha/publish-test-results
      # ========================================
      - name: Publish Test Results to CloudBees Unify
        uses: cloudbees-io-gha/publish-test-results@v2
        if: success() || failure()
        with:
          test-type: junit
          results-path: target/surefire-reports

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
          cache: maven

      - name: Run Checkstyle
        run: mvn checkstyle:check
        continue-on-error: true

      - name: Run SpotBugs
        run: mvn spotbugs:check
        continue-on-error: true

  scan:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # ========================================
      # CloudBees Action: Black Duck SCA Security Scanning
      # ----------------------------------------
      # Requires variables: BLACK_DUCK_URL
      # Requires secrets: BLACK_DUCK_TOKEN
      # Update project-name to match your project
      #
      # Docs: https://github.com/cloudbees-io-gha/black-duck-scan-publish
      # ========================================
      - name: Scan with Black Duck SCA
        uses: cloudbees-io-gha/black-duck-scan-publish@v2
        with:
          server-url: ${{ vars.BLACK_DUCK_URL }}
          api-token: ${{ secrets.BLACK_DUCK_TOKEN }}
          project-name: java-gha

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: [test, lint, scan]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
          cache: maven

      - name: Configure Maven settings
        uses: s4u/maven-settings-action@v3.1.0
        with:
          servers: |
            [{
              "id": "nexus-releases",
              "username": "${{ secrets.NEXUS_USERNAME }}",
              "password": "${{ secrets.NEXUS_PASSWORD }}"
            },
            {
              "id": "nexus-snapshots",
              "username": "${{ secrets.NEXUS_USERNAME }}",
              "password": "${{ secrets.NEXUS_PASSWORD }}"
            }]

      - name: Set version from Git
        id: version
        run: |
          COMMIT_COUNT=$(git rev-list --count HEAD)
          SHORT_SHA=$(git rev-parse --short HEAD)
          NEW_VERSION="1.0.0-${COMMIT_COUNT}-${SHORT_SHA}"
          echo "Setting version to: $NEW_VERSION"
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          mvn versions:set -DnewVersion="$NEW_VERSION"

      - name: Build and Deploy to Nexus
        run: mvn clean deploy -DskipTests -Dnexus.url="${NEXUS_URL}"
        env:
          NEXUS_URL: ${{ secrets.NEXUS_URL }}

      # ========================================
      # CloudBees Action: Register Build Artifacts
      # ----------------------------------------
      # Registers build artifacts with CloudBees Platform for artifact tracking and deployment
      # Update parameters based on your artifact type and target repository
      # The `type` field is an optional field to help convey what type it is
      #
      # Docs: https://github.com/cloudbees-io-gha/register-build-artifact
      # ========================================
      - name: Register Build Artifacts in CloudBees Platform
        id: register-artifact
        uses: cloudbees-io-gha/register-build-artifact@v3
        with:
          name: ${{ github.repository }}
          url: ${{ secrets.NEXUS_URL }}/repository/maven-releases/com/example/java-gha/${{ steps.version.outputs.version }}/java-gha-${{ steps.version.outputs.version }}.jar
          version: ${{ steps.version.outputs.version }}
          type: Maven

      # ========================================
      # CloudBees Action: Label Artifact Version
      # ----------------------------------------
      # Adds metadata labels to registered artifacts for organization and filtering
      # Requires artifact-id from the register-build-artifact step
      # Update labels to match your tagging strategy
      #
      # Docs: https://github.com/cloudbees-io-gha/label-artifact-version
      # ========================================
      - name: Add Labels to Artifact
        uses: cloudbees-io-gha/label-artifact-version@v1
        with:
          artifact-id: ${{ steps.register-artifact.outputs.cbp_artifact_id }}
          labels: "main,maven,nexus"

      # ========================================
      # CloudBees Action: Publish Build Evidence
      # ----------------------------------------
      # Creates audit trail and compliance documentation for the build process
      # Content can be customized to include contextual information
      # Supports markdown formatting
      #
      # Docs: https://github.com/cloudbees-io-gha/publish-evidence-item
      # ========================================
      - name: Publish Build Evidence
        uses: cloudbees-io-gha/publish-evidence-item@v2
        with:
          content: |-
            # Build Evidence Report

            ## Artifact Details
            - **Repository**: ${{ github.repository }}
            - **Version**: ${{ steps.version.outputs.version }}
            - **Artifact ID**: ${{ steps.register-artifact.outputs.cbp_artifact_id }}
            - **Type**: Maven

            ## Deployment
            - **Target**: Nexus Repository
            - **URL**: ${{ secrets.NEXUS_URL }}
            - **Labels**: main, maven, nexus

            ## Workflow Summary
            - **Branch**: ${{ github.ref_name }}
            - **Commit**: ${{ github.sha }}
            - **Run**: ${{ github.run_number }}
            - **Triggered by**: ${{ github.event_name }}
